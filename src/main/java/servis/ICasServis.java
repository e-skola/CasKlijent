
package servis;

import java.util.List;
import javax.jws.WebMethod;
import javax.jws.WebParam;
import javax.jws.WebResult;
import javax.jws.WebService;
import javax.xml.bind.annotation.XmlSeeAlso;
import javax.xml.ws.Action;
import javax.xml.ws.RequestWrapper;
import javax.xml.ws.ResponseWrapper;


/**
 * This class was generated by the JAX-WS RI.
 * JAX-WS RI 2.2.9-b130926.1035
 * Generated source version: 2.2
 * 
 */
@WebService(name = "ICasServis", targetNamespace = "http://servis/")
@XmlSeeAlso({
    ObjectFactory.class
})
public interface ICasServis {


    /**
     * 
     * @param arg1
     * @param arg0
     * @return
     *     returns java.util.List<servis.Materijal>
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "preuzmiMaterijale", targetNamespace = "http://servis/", className = "servis.PreuzmiMaterijale")
    @ResponseWrapper(localName = "preuzmiMaterijaleResponse", targetNamespace = "http://servis/", className = "servis.PreuzmiMaterijaleResponse")
    @Action(input = "http://servis/ICasServis/preuzmiMaterijaleRequest", output = "http://servis/ICasServis/preuzmiMaterijaleResponse")
    public List<Materijal> preuzmiMaterijale(
        @WebParam(name = "arg0", targetNamespace = "")
        int arg0,
        @WebParam(name = "arg1", targetNamespace = "")
        int arg1);

    /**
     * 
     * @param arg0
     * @return
     *     returns servis.Materijal
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "preuzmiMaterijal", targetNamespace = "http://servis/", className = "servis.PreuzmiMaterijal")
    @ResponseWrapper(localName = "preuzmiMaterijalResponse", targetNamespace = "http://servis/", className = "servis.PreuzmiMaterijalResponse")
    @Action(input = "http://servis/ICasServis/preuzmiMaterijalRequest", output = "http://servis/ICasServis/preuzmiMaterijalResponse")
    public Materijal preuzmiMaterijal(
        @WebParam(name = "arg0", targetNamespace = "")
        int arg0);

    /**
     * 
     * @param arg0
     * @return
     *     returns servis.Takmicar
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "prijavaTakmicara", targetNamespace = "http://servis/", className = "servis.PrijavaTakmicara")
    @ResponseWrapper(localName = "prijavaTakmicaraResponse", targetNamespace = "http://servis/", className = "servis.PrijavaTakmicaraResponse")
    @Action(input = "http://servis/ICasServis/prijavaTakmicaraRequest", output = "http://servis/ICasServis/prijavaTakmicaraResponse")
    public Takmicar prijavaTakmicara(
        @WebParam(name = "arg0", targetNamespace = "")
        Takmicar arg0);

    /**
     * 
     * @return
     *     returns int
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "preuzmiBrojPitanja", targetNamespace = "http://servis/", className = "servis.PreuzmiBrojPitanja")
    @ResponseWrapper(localName = "preuzmiBrojPitanjaResponse", targetNamespace = "http://servis/", className = "servis.PreuzmiBrojPitanjaResponse")
    @Action(input = "http://servis/ICasServis/preuzmiBrojPitanjaRequest", output = "http://servis/ICasServis/preuzmiBrojPitanjaResponse")
    public int preuzmiBrojPitanja();

    /**
     * 
     * @param arg0
     * @return
     *     returns servis.Pitanje
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "preuzmiPitanje", targetNamespace = "http://servis/", className = "servis.PreuzmiPitanje")
    @ResponseWrapper(localName = "preuzmiPitanjeResponse", targetNamespace = "http://servis/", className = "servis.PreuzmiPitanjeResponse")
    @Action(input = "http://servis/ICasServis/preuzmiPitanjeRequest", output = "http://servis/ICasServis/preuzmiPitanjeResponse")
    public Pitanje preuzmiPitanje(
        @WebParam(name = "arg0", targetNamespace = "")
        int arg0);

    /**
     * 
     * @param arg1
     * @param arg0
     * @return
     *     returns servis.Takmicar
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "proveriResenje", targetNamespace = "http://servis/", className = "servis.ProveriResenje")
    @ResponseWrapper(localName = "proveriResenjeResponse", targetNamespace = "http://servis/", className = "servis.ProveriResenjeResponse")
    @Action(input = "http://servis/ICasServis/proveriResenjeRequest", output = "http://servis/ICasServis/proveriResenjeResponse")
    public Takmicar proveriResenje(
        @WebParam(name = "arg0", targetNamespace = "")
        Takmicar arg0,
        @WebParam(name = "arg1", targetNamespace = "")
        Pitanje arg1);

    /**
     * 
     * @return
     *     returns java.util.List<servis.Takmicar>
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "preuzmiRangListu", targetNamespace = "http://servis/", className = "servis.PreuzmiRangListu")
    @ResponseWrapper(localName = "preuzmiRangListuResponse", targetNamespace = "http://servis/", className = "servis.PreuzmiRangListuResponse")
    @Action(input = "http://servis/ICasServis/preuzmiRangListuRequest", output = "http://servis/ICasServis/preuzmiRangListuResponse")
    public List<Takmicar> preuzmiRangListu();

    /**
     * 
     * @return
     *     returns boolean
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "isKvizPokrenut", targetNamespace = "http://servis/", className = "servis.IsKvizPokrenut")
    @ResponseWrapper(localName = "isKvizPokrenutResponse", targetNamespace = "http://servis/", className = "servis.IsKvizPokrenutResponse")
    @Action(input = "http://servis/ICasServis/isKvizPokrenutRequest", output = "http://servis/ICasServis/isKvizPokrenutResponse")
    public boolean isKvizPokrenut();

}
